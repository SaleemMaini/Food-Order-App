{"version":3,"sources":["components/Cart/Cart.module.css","components/UI/Modal.module.css","components/Cart/CartItem.module.css","components/Cart/Checkout.module.css","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js"],"names":["module","exports","Backdrop","props","className","classes","backdrop","onClick","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","onClose","CartItem","name","summary","price","amount","actions","onRemove","onAdd","Checkout","useState","street","postalCode","city","formInputsValidity","setFormInputsValidity","nameInputRef","useRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","value","trim","nameInputClasses","control","invalid","streetInputClasses","postalInputClasses","cityInputClasses","onSubmit","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","length","enteredCityIsValid","onConfirm","form","Input","input","type","id","ref","label","invalidInput","onCancel","submit","Cart","checkoutIsVisible","setCheckoutIsVisible","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","useContext","CartContext","cartList","items","totalAmount","toFixed","hasItems","cartItemAddHandler","item","addItem","cartItemRemoveHandler","removeItem","submitOrderHandler","userData","a","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","bind","modalActions","button","isSubmittingModalContent","didSubmittedModalContent","Fragment","cartModalContent","total"],"mappings":"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","file":"static/js/3.43d9a596.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__3K3IZ\",\"total\":\"Cart_total__2CnBl\",\"actions\":\"Cart_actions__2uvzP\",\"button--alt\":\"Cart_button--alt__2oGQz\",\"button\":\"Cart_button__1bCiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1C-zG\",\"modal\":\"Modal_modal__1v4hb\",\"slide-down\":\"Modal_slide-down__1nl5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__2UegP\",\"summary\":\"CartItem_summary__Ocyzb\",\"price\":\"CartItem_price__1DiMZ\",\"amount\":\"CartItem_amount__lS5WJ\",\"actions\":\"CartItem_actions__h-B5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26T_w\",\"control\":\"Checkout_control__dQM6C\",\"actions\":\"Checkout_actions__1Bv72\",\"submit\":\"Checkout_submit__1szXQ\",\"invalid\":\"Checkout_invalid__t3SS8\",\"invalidInput\":\"Checkout_invalidInput__21kFS\"};","import React, { Fragment } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById(\"modal\");\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./CartItem.module.css\";\r\nconst CartItem = (props) => {\r\n  return (\r\n    <li className={classes[\"cart-item\"]}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{`$${props.price}`}</span>\r\n          <span className={classes.amount}>{`X ${props.amount}`}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>-</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default CartItem;\r\n","import Input from \"../UI/Input\";\r\nimport { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n  // FORM VALIDITY STATE\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n  // INPUTS REFS\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  // VALIDATION INPUT HELPER FUNCTIONS\r\n  const isEmpty = (value) => value.trim() === \"\";\r\n  const isFiveChars = (value) => value.trim().length === 5;\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // GET CHECK OUT FORM VALUES\r\n    const enteredName = nameInputRef.current.value();\r\n    const enteredStreet = streetInputRef.current.value();\r\n    const enteredPostal = postalInputRef.current.value();\r\n    const enteredCity = cityInputRef.current.value();\r\n    // VALIDATE CHECK OUT FORM VALUES\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n      city: enteredCityIsValid,\r\n    });\r\n\r\n    // CHECK IF FORM IS VALID THEN SUBMIT THE DATA\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalCodeIsValid &&\r\n      enteredCityIsValid;\r\n    // RETURN AN ERROR IF THE FORM IS NOT VALID\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    // SUBMIT THE CART DATA\r\n    props.onConfirm({\r\n      name : enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostal\r\n    });\r\n  };\r\n  // Input Classes\r\n  // name\r\n  const nameInputClasses = formInputsValidity.name\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // street\r\n  const streetInputClasses = formInputsValidity.street\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // postal\r\n  const postalInputClasses = formInputsValidity.postalCode\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // city\r\n  const cityInputClasses = formInputsValidity.city\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <Input\r\n        className={nameInputClasses}\r\n        input={{\r\n          type: \"text\",\r\n          id: \"name\",\r\n        }}\r\n        ref={nameInputRef}\r\n        label=\"Name\"\r\n      />\r\n      {!formInputsValidity.name && (\r\n        <p className={classes.invalidInput}>Please enter a valid name.</p>\r\n      )}\r\n      <Input\r\n        className={streetInputClasses}\r\n        input={{\r\n          type: \"text\",\r\n          id: \"street\",\r\n        }}\r\n        ref={streetInputRef}\r\n        label=\"Street\"\r\n      />\r\n      {!formInputsValidity.street && (\r\n        <p className={classes.invalidInput}>Please enter a valid street.</p>\r\n      )}\r\n      <Input\r\n        className={postalInputClasses}\r\n        input={{\r\n          type: \"text\",\r\n          id: \"postal\",\r\n        }}\r\n        ref={postalInputRef}\r\n        label=\"Postal Code\"\r\n      />\r\n      {!formInputsValidity.postalCode && (\r\n        <p className={classes.invalidInput}>\r\n          Please enter a valid postal code (5) numbers.\r\n        </p>\r\n      )}\r\n      <Input\r\n        className={cityInputClasses}\r\n        input={{\r\n          type: \"text\",\r\n          id: \"city\",\r\n        }}\r\n        ref={cityInputRef}\r\n        label=\"City\"\r\n      />\r\n      {!formInputsValidity.city && (\r\n        <p className={classes.invalidInput}>Please enter a valid City.</p>\r\n      )}\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={classes.submit}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Checkout;\r\n","import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [checkoutIsVisible, setCheckoutIsVisible] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const cartList = cartCtx.items;\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartList.length > 0;\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    // set amount value to 1 to make the button add just one item\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  // SUBMIT ORDER HANDLER\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      \"https://react-http-3176c-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartList.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          price={item.price}\r\n          amount={item.amount}\r\n          // the bind function used here to not execute the function just to pass the arguments to it\r\n          // bind allows you to pre configure the argument that function will receive when it's being executed\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n  const orderHandler = () => {\r\n    setCheckoutIsVisible(true);\r\n  };\r\n\r\n  const modalActions = !checkoutIsVisible && (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmittedModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the oder.</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {checkoutIsVisible && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {/* #1 Cart Content */}\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {/* #2 IS SUBMITTING */}\r\n      {isSubmitting && !didSubmit && isSubmittingModalContent}\r\n      {/* #3 DID SUBMIT */}\r\n      {!isSubmitting && didSubmit && didSubmittedModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"sourceRoot":""}