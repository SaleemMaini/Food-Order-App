{"version":3,"sources":["components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/UI/Modal.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","assets/CartIcon.js","store/cart-context.js","components/Layout/HeaderCartButton.js","assets/logo.png","components/Layout/NavbarHeader.js","components/Layout/Header.js","hooks/use-http.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","store/CartContextProvider.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","App.js","index.js","components/Cart/Checkout.module.css"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","useState","btnIsHighLighted","setBtnIsHighLighted","useContext","numberOfCartItems","reduce","acc","curr","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","NavbarHeader","Navbar","sticky","bg","variant","Container","Brand","href","src","logo","alt","width","height","style","fontWeight","cartOnClick","Header","onOpenCart","useHttp","isLoading","setIsLoading","error","setError","sendRequest","useCallback","requestConfig","applyData","a","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","Input","forwardRef","ref","inputRef","useRef","getCurrValue","current","value","useImperativeHandle","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","form","onSubmit","event","preventDefault","enteredAmount","enteredAmountNumber","trim","onAddToCart","type","max","min","step","defaultValue","MealItem","cartCtx","price","toFixed","Col","Card","mealCard","Body","mealPhoto","Img","Title","name","Text","description","Footer","AvailableMeals","meals","setMeals","fetchMeals","mealObj","loadedMeals","mealKey","push","photo","mealsList","map","meal","errorHandle","Row","slice","Meals","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","updatedAmount","filter","CartContextProvider","useReducer","cartState","dispatchCartAction","Provider","children","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","onClose","CartItem","summary","actions","onRemove","onAdd","Checkout","street","postalCode","city","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","nameInputClasses","control","invalid","streetInputClasses","postalInputClasses","cityInputClasses","enteredName","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","onConfirm","invalidInput","onCancel","submit","Cart","checkoutIsVisible","setCheckoutIsVisible","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartList","hasItems","cartItemAddHandler","cartItemRemoveHandler","submitOrderHandler","userData","user","orderedItems","cartItems","bind","modalActions","isSubmittingModalContent","didSubmittedModalContent","Fragment","cartModalContent","total","App","cartIsVisible","setCartIsVisible","render"],"mappings":"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","file":"static/js/main.bde7a6e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__3K3IZ\",\"total\":\"Cart_total__2CnBl\",\"actions\":\"Cart_actions__2uvzP\",\"button--alt\":\"Cart_button--alt__2oGQz\",\"button\":\"Cart_button__1bCiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__2UegP\",\"summary\":\"CartItem_summary__Ocyzb\",\"price\":\"CartItem_price__1DiMZ\",\"amount\":\"CartItem_amount__lS5WJ\",\"actions\":\"CartItem_actions__h-B5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__2PYfn\",\"icon\":\"HeaderCartButton_icon__3Wpam\",\"badge\":\"HeaderCartButton_badge__1jtXQ\",\"bump\":\"HeaderCartButton_bump__1Hc6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mealsList\":\"AvailableMeals_mealsList__1qTa8\",\"meals-appear\":\"AvailableMeals_meals-appear__1DnQs\",\"errorHandle\":\"AvailableMeals_errorHandle__27gw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1C-zG\",\"modal\":\"Modal_modal__1v4hb\",\"slide-down\":\"Modal_slide-down__1nl5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__3tpdw\",\"description\":\"MealItem_description__3s4VQ\",\"mealPhoto\":\"MealItem_mealPhoto__TsIh_\",\"price\":\"MealItem_price__2SWWK\",\"mealCard\":\"MealItem_mealCard__GTqef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__32dYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__a7gDZ\"};","import React from \"react\";\r\n\r\nconst CartIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default CartIcon;\r\n","import React from \"react\";\r\n\r\n// mange overall data through context because we will need it in different places of the application\r\n// in the mealItem we need to update the cart\r\n// in the cart component we need to output it and mange it\r\n\r\nconst CartContext = React.createContext({\r\n    items : [],\r\n    totalAmount : 0,\r\n    addItem : (item) => {},\r\n    removeItem : (id) => {},\r\n    clearCart: () => {}\r\n})\r\n\r\nexport default CartContext;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CartIcon from \"../../assets/CartIcon\";\r\nimport classes from \"./HeaderCartButton.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const { items } = cartCtx;\r\n  // reduce is a method which allow us to transform an array of data into a single value  (here the value is number)\r\n  const numberOfCartItems = items.reduce((acc, curr) => {\r\n    return acc + curr.amount;\r\n  }, 0);\r\n\r\n  const btnClasses = `${classes.button} ${\r\n    btnIsHighLighted ? classes.bump : \"\"\r\n  }`;\r\n\r\n  useEffect(() => {\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n    setBtnIsHighLighted(true);\r\n    // set timer to remove the bump class after adding it\r\n    // 300 is the duration of bump animation\r\n    const timer = setTimeout(() => setBtnIsHighLighted(false), 300);\r\n    //   clean up function\r\n    // we do need this here because, of this timer can be set again befor it expired if we add multiple items rapidly after each other we wanna clear the old timer and make sure that a new timer is set and the old timer is cleared\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [items]);\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\nexport default HeaderCartButton;\r\n","export default __webpack_public_path__ + \"static/media/logo.afc79b0a.png\";","import Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport logo from \"../../assets/logo.png\";\r\nconst NavbarHeader = (props) => {\r\n  return (\r\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">\r\n          <img src={logo} alt=\"\" width=\"30\" height=\"30\" className=\"mx-3\" />\r\n          <span style={{ fontWeight: 600 }}>Food order app</span>\r\n        </Navbar.Brand>\r\n        <Navbar.Brand>\r\n          <HeaderCartButton onClick={props.cartOnClick} />\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default NavbarHeader;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport NavbarHeader from \"./NavbarHeader\";\r\nconst Header = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <NavbarHeader cartOnClick={props.onOpenCart}/>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Header;\r\n","import { useState, useCallback } from 'react';\r\nconst useHttp = () => {\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const [error,setError] = useState(null)\r\n// SEND REQUEST\r\n    const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n        setIsLoading(true);\r\n        setError(null)\r\n        try{\r\n            const response = await fetch(requestConfig.url, {\r\n                method:requestConfig.method ?  requestConfig.method : 'GET',\r\n                headers: requestConfig.headers ? requestConfig.headers : {},\r\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n            });\r\n            if(!response.ok){\r\n                throw new Error('Request Failed')\r\n            }\r\n            const data = await response.json();\r\n            applyData(data);\r\n        } catch (err) {\r\n            setError(err.message || 'Something wrong')\r\n        }\r\n        setIsLoading(false)\r\n    }, []);\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest\r\n    }\r\n}\r\nexport default useHttp;","import React from \"react\";\r\nimport { useRef,useImperativeHandle } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef();\r\n\r\n  const getCurrValue = () => inputRef.current.value;\r\n\r\n \r\n  useImperativeHandle(ref,() => {\r\n    return {\r\n      value : getCurrValue\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <div className={props.className || classes.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={inputRef} {...props.input} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React, { useRef, useState } from \"react\";\r\nimport Input from \"../../UI/Input\";\r\nimport classes from \"./MealItemForm.module.css\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n    // get the entered amount from the input using ref\r\n    const enteredAmount = amountInputRef.current.value;\r\n    // convert enterd value from  string to number\r\n    const enteredAmountNumber = +enteredAmount;\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n    // call a function which expect to get on props and forward entered amount number. because the cart item needs more data than just the entered amount, here we only have the amount thts why we need to calling the context method in the meal item component\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={`${classes.form} mx-auto`} onSubmit={submitFormHandler}>\r\n      {/* extract entered amount, use ref for that */}\r\n      <Input\r\n        input={{\r\n          ref: amountInputRef,\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          max: 5,\r\n          min: 1,\r\n          step: 1,\r\n          defaultValue: 1,\r\n        }}\r\n        label={\"Amount\"}\r\n      />\r\n      <button>+Add</button>\r\n      {!amountIsValid && <p>amount is not valid</p>}\r\n    </form>\r\n  );\r\n};\r\nexport default MealItemForm;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport classes from \"./MealItem.module.css\";\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport CartContext from \"../../../store/cart-context\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const price = `$${props.price.toFixed(2)}`;\r\n\r\n  const addToCartHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      amount: amount,\r\n      price: props.price,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Col>\r\n        <Card className={`${classes.mealCard} text-center`}>\r\n          <Card.Body>\r\n            <div className={`${classes.mealPhoto} mx-auto d-flex align-items-center`}>\r\n              <Card.Img\r\n                className=\"\"\r\n                variant=\"top\"\r\n                src={`${props.src}`}\r\n                alt=\"Image Photo\"\r\n              />\r\n            </div>\r\n            <Card.Title>{props.name}</Card.Title>\r\n            <Card.Text>{props.description}</Card.Text>\r\n            <Card.Text>{price}</Card.Text>\r\n            <Card.Footer>\r\n              <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n            </Card.Footer>{\" \"}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import useHttp from \"../../hooks/use-http\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nconst AvailableMeals = () => {\r\n  // ***************Fetch the data from the firebase ***************\r\n  // meals state is the list of data that we got from firebase api as json data then we convert it to js data\r\n  const [meals, setMeals] = useState([]);\r\n  // use http the custom hook used to handle with api\r\n  const { isLoading, error, sendRequest: fetchMeals } = useHttp();\r\n  // get data and handle it\r\n  useEffect(() => {\r\n    // get the data as JSON and convert it to js then save it in the meals state array\r\n    const transformMeals = (mealObj) => {\r\n      const loadedMeals = [];\r\n      for (const mealKey in mealObj) {\r\n        loadedMeals.push({\r\n          id: mealKey,\r\n          name: mealObj[mealKey].name,\r\n          description: mealObj[mealKey].description,\r\n          price: mealObj[mealKey].price,\r\n          photo: mealObj[mealKey].photo,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n    };\r\n    fetchMeals(\r\n      {\r\n        url: \"https://react-http-3176c-default-rtdb.firebaseio.com/meals.json\",\r\n      },\r\n      transformMeals\r\n    );\r\n  }, [fetchMeals]);\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n      src={meal.photo}\r\n    />\r\n  ));\r\n\r\n  // *************** End fetch the data ***************\r\n\r\n  return (\r\n    <section className={classes.mealsList}>\r\n      <header>Meals List</header>\r\n      {/* Error Handling */}\r\n      {isLoading && <p className={classes.errorHandle}>Loading...</p>}\r\n      {error && (\r\n        <p className={classes.errorHandle}>\r\n          {error} (Please turn on the VPN if firebase doesn't work in your\r\n          country).\r\n        </p>\r\n      )}\r\n      {/* Meals List */}\r\n      <Container>\r\n        <Row>{mealsList.slice(0, 3)}</Row>\r\n        <Row>\r\n          {mealsList.slice(3)}\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\n\r\nconst Meals = () => {\r\n  return (\r\n    <Fragment>\r\n      <AvailableMeals />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Meals;\r\n","import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n// The action is dispatched by you in your code\r\n// the state is the last state snapshot of the state manged by the reducer\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    // update cart items\r\n    //  add our items as a new item in that array\r\n    //group items for the same meal together and mange the amount on a per meal basis\r\n    //concat adds new item to an array, unlike push it doesn't edit the existing array but return a new array\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    // get the existing cart item index\r\n    // findIndex() is a method which finds the index of an item in an array, first arg is a func which should return true if that the item we're looking for, and false otherwise\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    // Get the existing cart Item\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n    // here we just update the amount of existing item\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  // ****************** REMOVE ITEM ***************************\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    // get the existing cart item index\r\n    // findIndex() is a method which finds the index of an item in an array, first arg is a func which should return true if that the item we're looking for, and false otherwise\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    // Get the existing cart Item\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    // Updated Amount\r\n    const updatedAmount = state.totalAmount - existingCartItem.price;\r\n\r\n    let updatedItems;\r\n    // Delete the item from the cart when the amount is = 0\r\n    if (existingCartItem.amount === 1) {\r\n      // filter give us a new array which don't contain item that have that id\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    }\r\n\r\n    // here dont delete the item just update the total amount of it by -1\r\n    else {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount - 1,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedAmount,\r\n    };\r\n  }\r\n  if (action.type === 'CLEAR') {\r\n    return defaultCartState;\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartContextProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\r\n  };\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({type: 'CLEAR'})\r\n  }\r\n  const cartCtx = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartCtx}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartContextProvider;\r\n","import React, { Fragment } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById(\"modal\");\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./CartItem.module.css\";\r\nconst CartItem = (props) => {\r\n  return (\r\n    <li className={classes[\"cart-item\"]}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{`$${props.price}`}</span>\r\n          <span className={classes.amount}>{`X ${props.amount}`}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>-</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default CartItem;\r\n","import Input from \"../UI/Input\";\r\nimport { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n  // FORM VALIDITY STATE\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n  // INPUTS REFS\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  // VALIDATION INPUT HELPER FUNCTIONS\r\n  const isEmpty = (value) => value.trim() === \"\";\r\n  const isFiveChars = (value) => value.trim().length === 5;\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // GET CHECK OUT FORM VALUES\r\n    const enteredName = nameInputRef.current.value();\r\n    const enteredStreet = streetInputRef.current.value();\r\n    const enteredPostal = postalInputRef.current.value();\r\n    const enteredCity = cityInputRef.current.value();\r\n    // VALIDATE CHECK OUT FORM VALUES\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n      city: enteredCityIsValid,\r\n    });\r\n\r\n    // CHECK IF FORM IS VALID THEN SUBMIT THE DATA\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalCodeIsValid &&\r\n      enteredCityIsValid;\r\n    // RETURN AN ERROR IF THE FORM IS NOT VALID\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    // SUBMIT THE CART DATA\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostal,\r\n    });\r\n  };\r\n  // Input Classes\r\n  // name\r\n  const nameInputClasses = formInputsValidity.name\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // street\r\n  const streetInputClasses = formInputsValidity.street\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // postal\r\n  const postalInputClasses = formInputsValidity.postalCode\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n  // city\r\n  const cityInputClasses = formInputsValidity.city\r\n    ? `${classes.control}`\r\n    : `${classes.control} ${classes.invalid}`;\r\n\r\n  return (\r\n      <form onSubmit={submitHandler} className={classes.form}>\r\n        <Input\r\n          className={nameInputClasses}\r\n          input={{\r\n            type: \"text\",\r\n            id: \"name\",\r\n          }}\r\n          ref={nameInputRef}\r\n          label=\"Name\"\r\n        />\r\n        {!formInputsValidity.name && (\r\n          <p className={classes.invalidInput}>Please enter a valid name.</p>\r\n        )}\r\n        <Input\r\n          className={streetInputClasses}\r\n          input={{\r\n            type: \"text\",\r\n            id: \"street\",\r\n          }}\r\n          ref={streetInputRef}\r\n          label=\"Street\"\r\n        />\r\n        {!formInputsValidity.street && (\r\n          <p className={classes.invalidInput}>Please enter a valid street.</p>\r\n        )}\r\n        <Input\r\n          className={postalInputClasses}\r\n          input={{\r\n            type: \"text\",\r\n            id: \"postal\",\r\n          }}\r\n          ref={postalInputRef}\r\n          label=\"Postal Code\"\r\n        />\r\n        {!formInputsValidity.postalCode && (\r\n          <p className={classes.invalidInput}>\r\n            Please enter a valid postal code (5) numbers.\r\n          </p>\r\n        )}\r\n        <Input\r\n          className={cityInputClasses}\r\n          input={{\r\n            type: \"text\",\r\n            id: \"city\",\r\n          }}\r\n          ref={cityInputRef}\r\n          label=\"City\"\r\n        />\r\n        {!formInputsValidity.city && (\r\n          <p className={classes.invalidInput}>Please enter a valid City.</p>\r\n        )}\r\n        <div className={classes.actions}>\r\n          <button type=\"button\" onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className={classes.submit}>\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </form>\r\n  );\r\n};\r\nexport default Checkout;\r\n","import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [checkoutIsVisible, setCheckoutIsVisible] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const cartList = cartCtx.items;\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartList.length > 0;\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    // set amount value to 1 to make the button add just one item\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  // SUBMIT ORDER HANDLER\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      \"https://react-http-3176c-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartList.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          price={item.price}\r\n          amount={item.amount}\r\n          // the bind function used here to not execute the function just to pass the arguments to it\r\n          // bind allows you to pre configure the argument that function will receive when it's being executed\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n  const orderHandler = () => {\r\n    setCheckoutIsVisible(true);\r\n  };\r\n\r\n  const modalActions = !checkoutIsVisible && (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmittedModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the oder.</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {checkoutIsVisible && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {/* #1 Cart Content */}\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {/* #2 IS SUBMITTING */}\r\n      {isSubmitting && !didSubmit && isSubmittingModalContent}\r\n      {/* #3 DID SUBMIT */}\r\n      {!isSubmitting && didSubmit && didSubmittedModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport CartContextProvider from \"./store/CartContextProvider\";\nimport Cart from \"./components/Cart/Cart\";\n\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [cartIsVisible, setCartIsVisible] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsVisible(true);\n  };\n\n  const closeCartHandler = () => {\n    setCartIsVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n        <CartContextProvider>\n          {cartIsVisible && <Cart onClose={closeCartHandler}></Cart>}\n          <Header onOpenCart={showCartHandler} />\n          <main>\n            <Meals />\n          </main>\n        </CartContextProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26T_w\",\"control\":\"Checkout_control__dQM6C\",\"actions\":\"Checkout_actions__1Bv72\",\"submit\":\"Checkout_submit__1szXQ\",\"invalid\":\"Checkout_invalid__t3SS8\",\"invalidInput\":\"Checkout_invalidInput__21kFS\"};"],"sourceRoot":""}